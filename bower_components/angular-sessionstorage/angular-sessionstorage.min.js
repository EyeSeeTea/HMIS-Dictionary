/**
 * @license ngSessionStorage
 * (c) 2016 Jan Oetjen <oetjenj@gmail.com>
 * License: MIT
 */
!function (t, e, n) { "use strict"; e.module("ngSessionStorage", ["ng"]).provider("$sessionStorage", [function () { var t = this.defaults = {}; function r(n) { return n ? e.extend({}, t, n) : t } this.$get = [function () { return { get: function (t, e) { var o = [r(e).prefix, t].join(""); return n.getItem(o) }, getObject: function (t, n) { var r = this.get(t, n); return r ? e.fromJson(r) : r }, getAll: function (t) { var e, o = r(t), i = new RegExp(["^", o.prefix].join("")), u = {}; for (var c in n) n.hasOwnProperty(c) && i.test(c) && (u[e = c.replace(i, "")] = this.getObject(e)); return u }, put: function (t, e, o) { var i = [r(o).prefix, t].join(""); n.setItem(i, e) }, putObject: function (t, n, r) { this.put(t, e.toJson(n), r) }, remove: function (t, e) { var o = [r(e).prefix, t].join(""); n.removeItem(o) }, isEnabled: function () { return !n.isMemoryStorage } } }] }]) }(window, window.angular, function () { "use strict"; var t, e = "SOME_TEST_KEY"; function n() { Object.defineProperty(this, "length", { get: function () { return Object.keys(this).length } }) } n.prototype = Object.create(Object.prototype), n.prototype.constructor = n, n.prototype.getItem = function (t) { return this[t] }, n.prototype.setItem = function (t, e) { this[t] = e }, n.prototype.removeItem = function (t) { delete this[t] }, n.prototype.isMemoryStorage = !0; try { t = window.sessionStorage } catch (t) { return new n } if ("object" != typeof t) return new n; if ("function" != typeof t.getItem) return new n; if ("function" != typeof t.setItem) return new n; if ("function" != typeof t.removeItem) return new n; if ("function" != typeof t.clear) return new n; try { if (t.setItem(e, e), t.getItem(e) !== e && (t.clear(), t.setItem(e, e), t.getItem(e) !== e)) return new n; t.removeItem(e) } catch (t) { return new n } return t }());